check for unadded java files:
-----------------------------

$ svn status | grep ^\?.*\.java

find out the model of your graphics card
(NVIDIA Corporation GK107M [GeForce GT 755M])
(lenovo Y510P)

$ lspci -vnn | grep -i VGA -A 12

check ubuntu version:
---------------------

$ lsb_release -a


find occurance and print filename and linenum:
----------------------------------------------

$ find -name *.java -exec grep -Hn "@Inheritance" {} \;

$ find -name *.java -exec egrep -Hn "@Inheritance\(strategy\s*=\s*InheritanceType\..*\)" {} \; | wc -l

$ find $TE_HOME -name FwConfiguration.xml | xargs sed -i -- 's/maxActiveQuotesByMember="1500"/maxActiveQuotesByMember="150000"/g'

# -H --with-filename  print the file name for each match
# -n --line-number    print the line number with output lines

$ find . -name *.java -exec egrep -i -Hn 'transaction' {} \;

----------------------------------------------


diff <(sed -r "s#@Inheritance\(strategy\s*=\s*InheritanceType\..*\)##g" < ./nextgen-party/nextgen-party-domain-gs/src/main/java/com/so4it/nextgen/party/domain/SpaceParty.java) <(cat ./nextgen-party/nextgen-party-domain-gs/src/main/java/com/so4it/nextgen/party/domain/SpaceParty.java)


"@ElementCollection\(fetch\s*=\s*FetchType\..*\)"
"@CollectionTable\(name\s*=\s*.*\,\s*joinColumns\s*=\s*@JoinColumn\(name\s*=\s*.*\)\)"

"@DiscriminatorColumn\(name\s*=\s*.*\)"
"@Table\(name\s*=\s*.*\)"
"@Embedded"


"@AttributeOverride\(name\s*=\s*.\,\s*column\s*=\s*@Column\(name\s*=\s*.*\)\)"

"@CollectionTable\(name\s*=\s*.*\)"


"@Column\(name\s*=\s*.*\)"

"@Temporal\(TemporalType\.DATE\)"

http://openstack03:9200/_status?pretty=true

http://testnextgen03:9200/_status?pretty=1

curl http://openstack02.test.aza.se:9200/orderbooks/_search?pretty=1&q=*SE0005704053

jps -v | grep "com.gs.zones=${NIC_ADDR}_$ENV" | cut -d' ' -f1 | xargs kill

su jenkins -s /bin/bash

tar -zc /opt/jenkins/jobs/prepare-environment-for-deploy/workspace/nextgen-support/nextgen-jenkins/src
 | sudo -u gssupervisor ssh -o StrictHostKeyChecking=no gspaces@openstack03.test.aza.se "tar -zx -C ~/test"


sudo su -c "Your command right here" -s /bin/sh otheruser

$ ps -L --pid=8379 -o pid,tid,pcpu,state,nlwp,wchan:20,comm
$ ps -L --pid=140400 -o pid,tid,pcpu,state,nlwp,wchan

$ for i in `jps -lm | grep ".*esb" | awk '{print $1}'`; do echo $i; pstree -p $i | wc -l  ; done

Packge Management
-----------------

$ dpkg --list  Listar alla paket som är installerade med beskrivning

check for unadded java files:

$ svn status | grep ^\?.*\.java


find out the model of your graphics card
(NVIDIA Corporation GK107M [GeForce GT 755M])
(lenovo Y510P)

$ lspci -vnn | grep -i VGA -A 12


find occurance and print filename and linenum:
----------------------------------------------

$ find -name *.java -exec grep -Hn "@Inheritance" {} \;

$ find -name *.java -exec egrep -Hn "@Inheritance\(strategy\s*=\s*InheritanceType\..*\)" {} \; | wc -l

# -H --with-filename  print the file name for each match
# -n --line-number    print the line number with output lines
$ find . -name *.java -exec egrep -i -Hn 'transaction' {} \;


$ diff <(sed -r "s#@Inheritance\(strategy\s*=\s*InheritanceType\..*\)##g" < ./nextgen-party/nextgen-party-domain-gs/src/main/java/com/so4it/nextgen/party/domain/SpaceParty.java) <(cat ./nextgen-party/nextgen-party-domain-gs/src/main/java/com/so4it/nextgen/party/domain/SpaceParty.java)


"@ElementCollection\(fetch\s*=\s*FetchType\..*\)"
"@CollectionTable\(name\s*=\s*.*\,\s*joinColumns\s*=\s*@JoinColumn\(name\s*=\s*.*\)\)"

"@DiscriminatorColumn\(name\s*=\s*.*\)"
"@Table\(name\s*=\s*.*\)"
"@Embedded"

"@AttributeOverride\(name\s*=\s*.\,\s*column\s*=\s*@Column\(name\s*=\s*.*\)\)"

"@CollectionTable\(name\s*=\s*.*\)"

"@Column\(name\s*=\s*.*\)"

"@Temporal\(TemporalType\.DATE\)"

http://openstack03:9200/_status?pretty=true

http://testnextgen03:9200/_status?pretty=1

curl http://openstack02.test.aza.se:9200/orderbooks/_search?pretty=1&q=*SE0005704053

jps -v | grep "com.gs.zones=${NIC_ADDR}_$ENV" | cut -d' ' -f1 | xargs kill

ps aux | egrep ".*services=GSC$" --color | cut -d ' ' -f3 | wc -l

tar -zc /opt/jenkins/jobs/prepare-environment-for-deploy/workspace/nextgen-support/nextgen-jenkins/src
 | sudo -u gssupervisor ssh -o StrictHostKeyChecking=no gspaces@openstack03.test.aza.se "tar -zx -C ~/test"


http://openstack02.test.aza.se:8081/nextgen/client/

$ for i in `jps -lm | grep ".*esb" | awk '{print $1}'`; do echo $i; pstree -p $i | wc -l  ; done

pstree -H <pid> gspaces

$ ps -L --pid=140400 -o pid,tid,pcpu,state,nlwp,wchan

$ for i in `jps -lm | grep ".*esb" | awk '{print $1}'`; do echo $i; pstree -p $i | wc -l  ; done

$ pstree -H 118879 gspaces



An alternative way to install your public key in the remote machine's authorized_keys:
------------------------------------------------------------------------

$ cat ~/.ssh/id_rsa.pub | ssh USER@HOST "cat >> ~/.ssh/authorized_keys"

java -jar FastProxy.jar --local_port=10901 --remote_port=30501 --remote_host=nextver1.test.ngm.se --fast_templates=f│ERROR (out): java.net.SocketException: Socket closed
ile:////home/danter/dev/nextgen/nextgen-market/nextgen-market-common/nextgen-market-common-ngm/src/main/resources/FAST_templates_1.13.1│Accepting connection on: 0.0.0.0/0.0.0.0:10900
.xml --input_text_file=in_ch2.txt --output_text_file=out_ch2.txt


$ for i in $(ls); do sed -i 's#file:///home/gspaces/deploy/grid/hystrix.properties#file:///home/gspaces/nextgen-support/nextgen-environment-scripts/src/main/resources/scripts/deploy/hystrix.properties#g' "$i" ; done

$ for i in $(ls); do sed -i 's#hystrix.properties#grid/hystrix.properties#g' "$i"; done

$ undeploy-application nextgen-market-ngm

$ cat out_ch[1-5].txt | sed 's/<\/Instrument>/<\/Instrument>\n/g' > sum_out.txt


monitor connections:
--------------------

$ while [ true ]; do sudo netstat --tcp -np -d | egrep "185.39.146.163\:3030[0-4]"; echo  ""; sleep 2; doneo

$ watch -n0 'sudo netstat --tcp -np -d | egrep "185.39.146.163\:3050[0-4]"'

$ mvn -Dmaven.repo.local=./maven_repository clean install -T 1C

-hystrix.threadpool.default.coreSize = 30


$ java -cp nextgen-market-common-mitch-0.6.0-SNAPSHOT-executable.jar com.so4it.nextgen.mitch.tools.Sniffer 224.4.4.224:61300


$ watch -d -n 0 'sudo netstat --tcp -np -d | egrep "62.119.230.226"'

( går även med globbing dpkg --list 'foo*' )

$ sudo tcpdump -i bond0.510 udp port 61300 and host 224.4.5.226 -X

Block UDP traffic:
-----------------

$ sudo iptables -A INPUT -d 224.4.4.224 -p udp -m multiport --dports 61300 -j DROP

$ sudo iptables -A OUTPUT -p tcp -m multiport --dport 30500 -j DROP

An alternative way to install your public key in the remote machine's authorized_keys:
-------------------------------------------------------------------------------------
$ cat ~/.ssh/id_rsa.pub | ssh USER@HOST "cat >> ~/.ssh/authorized_keys"

$ java -jar FastProxy.jar --local_port=10901 --remote_port=30501 --remote_host=nextver1.test.ngm.se --fast_templates=f│ERROR (out): java.net.SocketException: Socket closed
ile:////home/danter/dev/nextgen/nextgen-market/nextgen-market-common/nextgen-market-common-ngm/src/main/resources/FAST_templates_1.13.1│Accepting connection on: 0.0.0.0/0.0.0.0:10900
.xml --input_text_file=in_ch2.txt --output_text_file=out_ch2.txt


$ for i in $(ls); do sed -i 's#file:///home/gspaces/deploy/grid/hystrix.properties#file:///home/gspaces/nextgen-support/nextgen-environment-scripts/src/main/resources/scripts/deploy/hystrix.properties#g' "$i" ; done

$ for i in $(ls); do sed -i 's#hystrix.properties#grid/hystrix.properties#g' "$i"; done

undeploy-application nextgen-market-ngm

cat out_ch[1-5].txt | sed 's/<\/Instrument>/<\/Instrument>\n/g' > sum_out.txt

./nextgen-environment-scripts/src/main/resources/scripts/deploy/templates/tgw-ngm-zone.properties


for i in `jps -lm | grep ".*esb" | awk '{print $1}'`; do echo $i; pstree -p $i | wc -l  ; done


 netstat -tan --inet
 -t = tcp
 -a = show all listening and none-listening


http://openstack03:9200/_status?pretty=true

http://testnextgen03:9200/_status?pretty=1

curl http://openstack02.test.aza.se:9200/orderbooks/_search?pretty=1&q=*SE0005704053

jps -v | grep "com.gs.zones=${NIC_ADDR}_$ENV" | cut -d' ' -f1 | xargs kill

tar -zc /opt/jenkins/jobs/prepare-environment-for-deploy/workspace/nextgen-support/nextgen-jenkins/src
 | sudo -u gssupervisor ssh -o StrictHostKeyChecking=no gspaces@openstack03.test.aza.se "tar -zx -C ~/test"

http://openstack02.test.aza.se:8081/nextgen/client/

export PATH_TO_SCRIPT="~/nextgen-support/nextgen-environment-scripts/src/main/resources/scripts/"
export export SSH_CMD="sudo -u gssupervisor ssh -o StrictHostKeyChecking=no "
export HOST_USER="gspaces"


curl -XGET 'http://testnextgen02.test.aza.se:9200/orderbooks/_search?q=instrumentId:442'
curl -XGET 'http://testnextgen02.test.aza.se:9200/orderbooks/_search?q=instrumentName:SAS&pretty=1'


find . -type f -exec sudo rm -rf {} \;


grep "^i;.*" nextgen-support/nextgen-soupbin/gcf_3.1.0_output.log | awk -F ";" '{ print $3 }' | sort | uniq

/var/log/quickfix/omx-genium-inet-fixed-income/order-entry/recv0411.log

jstack
------
jstack 217986 | grep -A 10 `echo "obase=16;231608" | bc | tr '[:upper:]' '[:lower:]'`

// jstack on betatest
watch -n0  'sudo -s -u gspaces /usr/java/java8/bin/jstack 161714 | grep -A 10 "FAST"'

show available cores
--------------------

$ nproc

$ lscpu

write image to disk.
---------------------

$ sudo dd if=xubuntu-14.04-desktop-i386.iso of=/dev/sdb bs=1M

find . -name *.java | xargs wc -l  | grep total | awk '

$ grep "BDDe" gcf-log/gcf_3.1.0_output.log | awk -F ";" '{ print substr($2,2,length($2)) "," substr($8,4,length($8)); }' > nils.txt

$ grep "ISn" bdui_UEt62.txt | awk -F ";" '{for(i=1;i<=NF;i++){if ($i ~ /^ISn/){print substr($i,4,length($i))}}}' | sort | uniq 

start elastic search:
--------------------
$ sudo bin/elasticsearch --config /etc/elasticsearch/elasticsearch.yml

$ cat out_ch1.txt |  sed -r -n 's/.*SecurityXML=(<.*>)/\1/p' | sed -r -n 's/]]]//p' | sed -r  's/<?xml version="1.0" encoding="UTF-8"?>//g'


$ cat out_ch1.txt |  sed -r -n 's/.*SecurityXML=(<.*>)/\1/p' | sed -r -n 's/]]]//p' | sed -r 's/<?xml version="1.0" encoding="UTF-8"?>//g' |  while read line ; do echo $line > $(echo $line | sed -r -n 's/.*<OrderbookID>(.*)<\/OrderbookID>.*/\1/p').xml ;done

$ cat out_ch1.txt |  sed -r -n 's/.*SecurityXML=(<.*>)/\1/p' | sed -r -n 's/]]]//p' | sed -r 's/<?xml version="1.0" encoding="UTF-8"?>//g' |  while read line1 ; do line=$line1; echo $line > gen/$(echo $line | sed -r -n 's/.*<OrderbookID>(.*)<\/OrderbookID>.*/\1/p').xml ;done


Print All Securities on NGM:
----------------------------

$ cat out_ch1.txt |  sed -r -n 's/.*SecurityXML=(<.*>)/\1/p' | sed -r -n 's/]]]//p' | sed -r 's/<?xml version="1.0" encoding="UTF-8"?>//g' | while read line1 ; do line=$line1; echo $line| sed -r -n 's/.*<OrderbookID>(.*)<\/OrderbookID>.*/\1/p'; done


$ cat out_ch1.txt |  sed -r -n 's/.*SecurityXML=(<.*>)/\1/p' | sed -r -n 's/]]]/\n/p'

$ cat out_ch1.txt | sed  -n 's/.*RelatedSym/\n/g'

$ jstat -gsutil 8038

$ date --date '@1523100781'

bring down broken link:
-----------------------

$ sudo ip link delete tunsnx

sed -s 's/1185=/\n/g' FIXT.1.1-PUB-5-NGM.messages.log | sed -r -n 's/<?xml version="1.0" encoding="UTF-8"?\>(.*\<Instrument>).*/\1/p' | sed -s 's/<?"?>//g'

Change system date on linux (xubuntu)
------------------------------------

$ sudo service systemd-timesyncd stop

$ sudo date --set='+2 days'

$ sudo date --set="16 MAY 2018 09:00:00"
